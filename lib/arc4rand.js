// Generated by CoffeeScript 1.5.0
/*
A seedable random number generator based on the arc4 algorithm. I based this
implementation on the pseudocode found here:
http://en.wikipedia.org/wiki/RC4#The_pseudo-random_generation_algorithm_.28PRGA.29

I used closures instead of of class to avoid the endless "this.<foo>"
references this would have required.
*/

var Arc4Rand, generateKeystream;

generateKeystream = function(seed) {
  var c, i, j, keystream, seedArray, seedLength, swap, _i;
  seedLength = seed.length;
  seedArray = ((function() {
    var _i, _len, _results;
    _results = [];
    for (_i = 0, _len = seed.length; _i < _len; _i++) {
      c = seed[_i];
      _results.push(c);
    }
    return _results;
  })()).map(function(c) {
    return c.charCodeAt(0);
  });
  keystream = (function() {
    var _i, _results;
    _results = [];
    for (i = _i = 0; _i < 256; i = ++_i) {
      _results.push(i);
    }
    return _results;
  })();
  j = 0;
  for (i = _i = 0; _i < 256; i = ++_i) {
    j = (j + keystream[i] + seedArray[i % seedLength]) % 256;
    swap = keystream[i];
    keystream[i] = keystream[j];
    keystream[j] = swap;
  }
  return keystream;
};

Arc4Rand = function(seed) {
  var i, j, keystream, randomByte;
  if (seed == null) {
    seed = "seed";
  }
  keystream = generateKeystream(seed);
  i = 0;
  j = 0;
  randomByte = function() {
    var index, swap;
    i = (i + 1) % 256;
    j = (j + keystream[i]) % 256;
    swap = keystream[i];
    keystream[i] = keystream[j];
    keystream[j] = swap;
    index = (keystream[i] + keystream[j]) % 256;
    return keystream[index];
  };
  this.random = function(min, max) {
    var number, random;
    if (min == null) {
      min = 0;
    }
    if (max == null) {
      max = 1;
    }
    number = randomByte() * 1 + randomByte() * 256 + randomByte() * 65536 + randomByte() * 16777216 + randomByte() * 4294967296 + randomByte() * 1099511627776 + randomByte() * 281474976710656 + randomByte() * 72057594037927940;
    random = number / 18446744073709551616;
    return min + (max - min) * random;
  };
  this.randomInt = function(min, max) {
    var float;
    float = this.random(min, max);
    return Math.round(float);
  };
  return this;
};

module.exports = Arc4Rand;
